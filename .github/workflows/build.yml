name: Python application

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.13]

    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:16
        env:
          POSTGRES_USER: bookstore_dev
          POSTGRES_PASSWORD: bookstore_dev
          POSTGRES_DB: bookstore_dev_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U bookstore_dev"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DJANGO_ALLOWED_HOSTS: "localhost 127.0.0.1 [::1]"
      SECRET_KEY: "dev-secret-key"
      SQL_ENGINE: django.db.backends.postgresql
      SQL_DATABASE: bookstore_dev_db
      SQL_USER: bookstore_dev
      SQL_PASSWORD: bookstore_dev
      SQL_HOST: localhost
      SQL_PORT: 5432

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry

      - name: View poetry --help
        run: poetry --help

      - name: Install dependencies
        shell: bash
        run: python -m poetry install

      - name: Copiar vari√°veis de ambiente
        run: cp ./env.dev .env

      - name: Esperar banco de dados
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 -U bookstore_dev && break
            echo "Aguardando PostgreSQL..."
            sleep 3
          done

      - name: Run migrations
        run: poetry run python manage.py migrate --noinput

      - name: Test
        run: poetry run python manage.py test
