name: Python Pull Request Workflow

on: [pull_request]

jobs:
  qa:
    name: Quality check
    runs-on: ubuntu-22.04

    services:
      db:
        image: postgres:16
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U bookstore_dev"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        env:
          POSTGRES_USER: bookstore_dev
          POSTGRES_PASSWORD: bookstore_dev
          POSTGRES_DB: bookstore_dev_db

    env:
      DJANGO_ALLOWED_HOSTS: "localhost 127.0.0.1 [::1]"
      SECRET_KEY: "dev-secret-key"
      SQL_ENGINE: django.db.backends.postgresql
      SQL_DATABASE: bookstore_dev_db
      SQL_USER: bookstore_dev
      SQL_PASSWORD: bookstore_dev
      SQL_HOST: db
      SQL_PORT: 5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Install poetry
        run: |
          pip install -U pip
          pip install poetry
        env:
          POETRY_VIRTUALENVS_CREATE: false

      - name: View poetry --help
        run: poetry --help

      - name: Install dependencies
        shell: bash
        run: python -m poetry install

      - name: Copiar vari√°veis de ambiente
        run: cp ./env.dev .env

      - name: Esperar banco de dados
        run: |
          for i in {1..10}; do
            pg_isready -h db -p 5432 -U bookstore_dev && break
            echo "Aguardando PostgreSQL..."
            sleep 3
          done

      - name: Test
        run: poetry run python manage.py test

      - name: Wemake Python Stylguide
        uses: wemake-services/wemake-python-styleguide@0.16.0
        continue-on-error: true
        with:
          reporter: 'github-pr-review'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
